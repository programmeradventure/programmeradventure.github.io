var Language = {
    menu_s1 : "Нажмите любую клавишу...",
    menu_s2 : "Programmer's adventure!",
    menu_s3 : "Javascript game",
    menu_ver:"ver. 0.88b",
    text1 : "Рюкзак",
    killMessage:"Вы убиты объектом - ",
    killMessage2:" уничтожен.",
    gameOver:"Вы убиты. Игра окончена.",
    fallMessage:"Вы упали в пропасть.",
    boom:"Мина взорвана.",
    fall:" упал в пропасть",
    explosion:"взорвался на мине",
    playerNotFound:"Нет игрока на карте.",
    typeNotFound:' Неизвестный тип ',
    moveKeysNote:"используйте &#8592 &#8593 &#8594 &#8595 or W-A-S-D чтобы двигаться",
    defineObjectError:'[map-error] Не удается создать объект ',
    invalidColor:"Неверный цвет объекта - ",
    gogError:"Запрещено размещать объекты 'ground' в ячейке",
    iogError:"Запрещено размещать объекты 'item' в ячейке",
    mogError:"Запрещено размещать объекты 'moved' в ячейке",

    error1:"[map-error] Превышено допустимое количество объектов:",
    error2:"[validator] Отсутствует необходимый предмет:",
    error3:"[map-error] Объект player уже создан!",
    error4:"[map-error] Не могу поместить предмет в [",
    error4_1:"] ячейка занята!",
    error7:"[map-error] недопустимы тип объекта.",
    error5:"[Protector] попытка переопределения метода",
    error6:"[Protector] запрещенное слово.",
    error7:"[map-error] Объект [",
    error7_1:"] уже определен.",
    error8: "[map-error] Объект [",
    error8_1:"] не найден.",
    error9:"[map-error] Точка ",
    error9_1: " за предлелами карты.",
    error10:'[SuperVisor] Нарушение очередности ходов...',
    error11:'[validator] Несовпадает количество объектов -',
    cheaterDetected:"[SuperVisor] читер детектед. ;)",
    timersError:" Слишком много таймеров.",
    timerMaxValueError:" Минимальный интервал для таймеров = 100ms",
    timerMaxCountError:" Максимальное количество таймеров = 5",

    trojanNotTarget:"[trojan] Не задана цель!",
    trojanActivated:"[trojan] Троян уже активирован!",
    notTrojanItem:"У вас нет трояна!",
    virusActivated:"[virus] Вирус уже активирован!",
    virusNotTarget:"[virus] объект не задан!",
    infectSuccess:"[virus] инфицирование завершено...",
    notVirusItem:"У вас нет вируса!",
    nonDynamicType:"[virus] тип объекта не dynamic",
    objectCracked:"[virus] объект успешно заражен",
    objectIsMortal:"[trojan] Объект - ",
    objectIsMortal2:" стал смертным.",
    noFlashLight:" У вас нет фонарика.",
    noTeleport:" [SuperVisor] Вы не стоите на телепорте.",
    nonInfected:"[virus] Не могу заразить объект - [",
    nonInfected2:"[trojan] Не могу заразить объект - [",
    teleportError:"[SuperVisor] объект teleport временно недоступен...",

    youTake:"Вы взяли ",
    takeBonus:"Взят бонус!",
    takeItem:"взял",
    takeLoot:"взял",
    noKey:"Отсутствует ключ!",
    phoneItemNotFound:"У вас нет телефона!",
    notepadNotFound:"У вас нет блокнота!",
    clockItemNotFound: "У вас нет часов!",
    infiniteLoop:"время выполнения цикла >",
    tryAgain:"Попробуйте еще раз...[нажмите кнопку 'Execute']",
    originalIdea:'original idea <a href = http://alexnisnevich.github.io/untrusted> Untrusted </a> by Alex Nisnevich and Greg Shuflin',

    scroll1Text:"Свиток 1: Ты останешься здесь навсегда! (рассыпался)",
    scroll2Text:"100101..0101...01010.110..map.placeButton...00010101",
    //scroll2Text:"Используйте функцию 'map.placeButton' API чтобы убрать стену... (рассыпался)",
    scroll3Text:"movedBlock взрывает мины... (рассыпался)",
    scroll4Text:"0001010010001....mine....0010100....empty...10100100",
    //scroll4Text:"mine убивает... empty убивает... (рассыпался)"

    api:{
           categories:["Global","Map","MapScanner","MapValidator","MapMessages","MapHackerTrojan","MapHackerVirus","Player","Object","ObjectTypes","ObjectEvents"],
           api_func:[

                {category:"Global",name:"startLevel()",desc:"Начало уровня."},
                {category:"Global",name:"validate()",desc:"Проверяет уровень на различные условия (см. раздел Validator)."},
                {category:"Global",name:"onExit()",desc:"Выполняется при выходе из уровня."},

                {category:"MapValidator",name:"map.checkLevelOnCountObject(name, count)",desc:"Количество объектов с именем 'name' на уровне не должно превышать значение 'count'."},
                {category:"MapValidator",name:"map.checkLevelOnCountObjectType(type, count)",desc:"Количество объектов с типом 'type' на уровне не должно превышать значение 'count'."},
                {category:"MapValidator",name:"map.equalsObject(name, count)",desc:"Количество объектов с именем 'name' на уровне должно строго соответствовать значению 'count'."},
                {category:"MapValidator",name:"map.checkLevelOnInventory(item)",desc:"Проверяет наличие предмета 'item' в инвентаре игрока."},

                {category:"Player",name:"player.getColor()",desc:"Возвращает цвет игрока."},
                {category:"Player",name:"player.setColor(color)",desc:"Устанавливает цвет игрока."},
                {category:"Player",name:"player.getX()",desc:"Возвращает координату X игрока."},
                {category:"Player",name:"player.getY()",desc:"Возвращает координату Y игрока."},
                {category:"Player",name:"player.move(direction)",desc:"Перемещает игрока в направлении 'up|down|left|right'."},
                {category:"Player",name:"player.kill()",desc:"Убивает игрока."},
                {category:"Player",name:"player.hasItem(item)",desc:"Возвращает true если предмет 'item' есть в инвентаре."},
                {category:"Player",name:"player.dropItem()",desc:"Удаляет предмет из инвентаря."},
                {category:"Player",name:"player.getDirection()",desc:"Возвращает направление движения игрока."},
                {category:"Player",name:"player.update()",desc:"Перерисовывает инвентарь игрока."},
                {category:"Player",name:"player.setPhoneCallback(func)",desc:"Устанавливает обработчик события 'phone' (работает только при наличии телефона в инвентаре)."},

                {category:"Map",name:"map.getPlayer()",desc:"Возвращает объект игрока."},
                {category:"Map",name:"map.placeObject(object,x,y)",desc:"Помещает объект 'object' в координаты [x:y]."},
                {category:"Map",name:"map.placePlayer(x,y)",desc:"Помещает игрока в координаты [x:y]."},
                {category:"Map",name:"map.placeTeleport(x,y,target_x,target_y)",desc:"Помещает телепорт в координаты [x:y] и перемещает объект, наступивший на него, в [target_x:target_y]."},
                {category:"Map",name:"map.placeButton(x,y,target_x,target_y)",desc:"Помещает объект 'кнопка' в координаты [x:y] и при нажатии убирает объект в координатах [target_x:target_y]."},
                {category:"Map",name:"map.placeColorButton(name,x,y,target_x,target_y,color)",desc:"Oбъект 'кнопка' с проверкой условия - объект, наступивший на кнопку, должен быть того же цвета."},
                {category:"Map",name:"map.defineObject(properties)",desc:"Объявляет новый объект с настройками 'properties'. Пример: map.defineObject({name: 'test',color:'#0f0',symbol:'*',type:'ground'})"},
                {category:"Map",name:"map.flash(name)",desc:"Освещает объекты с именем 'name' желтым светом. (не работает с типом dynamic)"},

                {category:"MapMessages",name:"map.showMessage(text,color)",desc:"Отображает сообщение 'text' цветом 'color'."},
   
                {category:"MapScanner",name:"map.whoIs(x,y)",desc:"Возвращает имя объекта в координатах [x:y]."},
                {category:"MapScanner",name:"map.getObjectsCoords(name)",desc:"Возвращает массив координат всех объектов с именем 'name'."},
                {category:"MapScanner",name:"map.getObjectCount(name)",desc:"Возвращает количество объектов с именем 'name'."},
                
                {category:"MapHackerTrojan",name:"map.createTrojan()",desc:"Создает троянскую программу и возвращает объект trojan.(Необходимо иметь объект 'trojan' в инвентаре.)"},
                {category:"MapHackerTrojan",name:"trojan.setTarget(name)",desc:"Устанавливает цель трояна - объекты с именем 'name'."},
                {category:"MapHackerTrojan",name:"trojan.changeColor(value)",desc:"Устанавливает цвет зараженных объектов."},
                {category:"MapHackerTrojan",name:"trojan.changeSymbol(value)",desc:"Устанавливает символ зараженных объектов."},
                {category:"MapHackerTrojan",name:"trojan.setMortal()",desc:"Устанавливает атрибут undead в false, делая объект смертным (только для типа dynamic)"},

                {category:"MapHackerVirus",name:"map.createVirus()",desc:"Создает вирусную программу и возвращает объект virus.(Необходимо иметь объект 'virus' в инвентаре.)"},
                {category:"MapHackerVirus",name:"virus.infect(x,y)",desc:"Инфицирует объект в точке [x,y]. (Действует только на тип 'dynamic'.)"},
                {category:"MapHackerVirus",name:"virus.crackBehavior(newBehavior)",desc:"Взлом поведенческой функции ('behavior') объекта и замена ее на свою."},

                {category:"Object",name:"name",desc:"Имя объекта."},
                {category:"Object",name:"color",desc:"Цвет объекта."},
                {category:"Object",name:"symbol",desc:"Символ объекта."},
                {category:"Object",name:"type",desc:"Тип объекта."},
                {category:"Object",name:"getColor()",desc:"Возвращает цвет объекта."},
                {category:"Object",name:"setColor(color)",desc:"Устанавливает цвет объекта."},
                {category:"Object",name:"getX()",desc:"Возвращает координату X объекта."},
                {category:"Object",name:"getY()",desc:"Возвращает координату Y объекта."},
                {category:"Object",name:"getDirection()",desc:"Возвращает направление объекта."},
                {category:"Object",name:"giveItems(object)",desc:"Перемещает предметы из своего инвентаря в инвентарь объекта 'object'"},
                {category:"Object",name:"canMove(direction)",desc:"Возвращает true если возможно передвижение в направлении 'direction'"},
                {category:"Object",name:"move(direction)",desc:"Перемещает объект в направлении 'up|down|left|right'."},
                {category:"Object",name:"findNearestToPoint(name)",desc:"находит ближайший объект с именем 'name' и возвращает его координаты."},
                {category:"Object",name:"kill()",desc:"Убивает объект."},

                {category:"ObjectTypes",name:"static",desc:"Неперемещаемый, непроходимый объект."},
                {category:"ObjectTypes",name:"dynamic",desc:"Двигающийся объект."},
                {category:"ObjectTypes",name:"item",desc:"Объект, помещаемый в инвентарь."},
                {category:"ObjectTypes",name:"impassable",desc:"Неперемещаемый, непроходимый (если нет ключа) объект."},
                {category:"ObjectTypes",name:"moved",desc:"Передвигаемый объект."},
                {category:"ObjectTypes",name:"ground",desc:"Oбъект по которому можно перемещаться."},
                
                {category:"ObjectEvents",name:"onPlayerCollision(player,me)",desc:"Событие, возникающее при столкновении игрока с объектом."},
                {category:"ObjectEvents",name:"onCollision(object)",desc:"Событие, возникающее при столкновении объекта с объектом 'object'."},
                {category:"ObjectEvents",name:"behavior(me)",desc:"Только для типа 'dynamic', описывает поведение объекта."},
                {category:"ObjectEvents",name:"onTake()",desc:"Только для типа 'item'. Событие, возникающее при взятии предмета, должно возвращать true если предмет помещается в инвентарь и false если предмет разрушается."},
                {category:"ObjectEvents",name:"onPass(object)",desc:"Только для типа 'impassable'. Событие, возникающее при столкновении с дверью (проверка ключа в инвентаре 'object')."},
           ]
    }
};